/* Copyright 2024 Robert Zieba, see LICENSE file for full license. */
use super::{ CSR_BLOCK_SIZE, ISR_BASE, ISR_SIZE };

pub const DBG_OUT_BASE: u32 = ISR_BASE + ISR_SIZE;
pub const DBG_OUT_SIZE: u32 = 4 * CSR_BLOCK_SIZE;

pub const DBG_OUT_STATUS_REG: u32 = DBG_OUT_BASE;

pub const DBG_OUT_CHAR_OUT0_REG: u32 = DBG_OUT_STATUS_REG + CSR_BLOCK_SIZE;
pub const DBG_OUT_CHAR_IN0_REG: u32 = DBG_OUT_CHAR_OUT0_REG + 1;

pub const DBG_OUT_BYTE_OUT0_REG: u32 = DBG_OUT_STATUS_REG + 2 * CSR_BLOCK_SIZE;
pub const DBG_OUT_BYTE_OUT1_REG: u32 = DBG_OUT_BYTE_OUT0_REG + 1;
pub const DBG_OUT_BYTE_OUT2_REG: u32 = DBG_OUT_BYTE_OUT0_REG + 2;
pub const DBG_OUT_BYTE_OUT3_REG: u32 = DBG_OUT_BYTE_OUT0_REG + 3;

pub const DBG_OUT_GPIO_OUT0_REG: u32 = DBG_OUT_STATUS_REG + 3 * CSR_BLOCK_SIZE;
pub const DBG_OUT_GPIO_IN0_REG: u32 = DBG_OUT_GPIO_OUT0_REG + 0x04;